import { tags } from "typia";

/**
 * 가상계좌 서비스 내 입금 매칭 이력을 나타내는 엔터티입니다.
 *
 * 각 입금 매칭은 단건의 입금 이벤트가 어떤 고객에게 연결되었는지를 자동 또는 수동으로 기록한 결과로, 감사 추적, 에러 진단, 재처리 등에
 * 활용됩니다.
 *
 * Prisma DB의 virtual_account_deposit_matchings 테이블과 매핑되며, 관리자·고객·입금 등과의 참조 관계를
 * 가집니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IVirtualAccountDepositMatchings = {
  /**
   * 입금 매칭 고유 ID입니다. 각 매칭 이벤트를 구분하는 식별자입니다.
   *
   * Prisma DB 컬럼 id에 해당하며, 레코드의 주 키입니다.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 매칭된 입금 이벤트의 ID입니다. virtual_account_deposits 테이블과의 관계를 표시합니다.
   *
   * 입금의 식별자로, 매칭된 입금 이벤트를 추적하는 데 이용됩니다.
   */
  deposit_id: string & tags.Format<"uuid">;

  /**
   * 이 매칭을 수행한 관리자(또는 시스템)의 ID입니다.
   *
   * 입금 매칭 행위에 대한 감사 및 이력 기록의 대상 계정입니다.
   */
  admin_id: string & tags.Format<"uuid">;

  /**
   * 이 입금 매칭을 통해 최종적으로 연결된 고객의 ID입니다. virtual_account_customers 테이블의 참조키입니다.
   *
   * 자동/수동 매칭 결과 고객 식별 및 현황 모니터링에 사용됩니다.
   */
  matched_customer_id: string & tags.Format<"uuid">;

  /**
   * 실제 매칭이 일어난 일시입니다.
   *
   * 매칭 활동 시각 기록(PG/은행 연동, 수동/자동 매칭 모두 대상)입니다.
   */
  matched_at: string & tags.Format<"date-time">;

  /**
   * 매칭 방식입니다. 'AUTOMATIC' 또는 'MANUAL' 값 중 하나로 기록합니다.
   *
   * 프로그래밍 혹은 운영자가 직접한 케이스 구분 시 사용됩니다.
   */
  matching_method: string;

  /** 매칭 사유 또는 관리자 코멘트(선택적 필드). 매칭 시 기록되는 코멘트·사유 등의 정보로, 이슈 진단 및 이력 관리에 활용됩니다. */
  reason: string;
};
export namespace IVirtualAccountDepositMatchings {
  /**
   * 입금 매칭(virtual_account_deposit_matchings) 이력 리스트 요청용 인터페이스입니다.
   *
   * 입금PK, 처리자, 기간, 매칭상태 기준으로 필터+페이징이 가능합니다.
   *
   * 주로 관리/감사/운영 대시보드에서 사용됩니다.
   */
  export type IRequest = {
    /**
     * 검색/필터 대상 입금 이벤트의 고유 ID.
     *
     * Deposit matching의 하위 필터.
     */
    deposit_id?: string & tags.Format<"uuid">;

    /** 매칭 시도 대상 상태값(자동, 수동 등 matching_method로 활용 가능). */
    status?: string;

    /** 매칭된 고객ID 기반 필터. */
    matched_customer_id?: string & tags.Format<"uuid">;

    /** 관리자(매칭 담당자) 기반 필터. */
    admin_id?: string & tags.Format<"uuid">;

    /** 조회 시작일. */
    from_date?: string & tags.Format<"date-time">;

    /** 조회 종료일. */
    to_date?: string & tags.Format<"date-time">;

    /** 페이지 번호(페이징). */
    page?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** 페이지별 결과 한도(기본값 등 적용 가능). */
    limit?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;
  };

  /**
   * 새 입금 매칭 생성 시 서버로 전달하는 요청 본문 구조입니다.
   *
   * 각 필드는 반드시 명확히 기입되어야 하며, 자동 매칭/수동 매칭 등 용도 구분이 필요합니다.
   *
   * Prisma DB의 virtual_account_deposit_matchings 테이블 정의 및 실제 업무 요구사항을 기준으로 모든
   * 필드를 갖춰야 합니다.
   */
  export type ICreate = {
    /**
     * 매칭할 입금 이벤트의 ID입니다. virtual_account_deposits 테이블 FK.
     *
     * 이 매칭 생성이 어느 입금 이벤트와 대응되는지 지정합니다.
     */
    deposit_id: string & tags.Format<"uuid">;

    /**
     * 매칭 수행 관리자(혹은 시스템 피해액) ID.
     *
     * 입금 매칭 등록 행위에 대한 책임자를 명시합니다.
     */
    admin_id: string & tags.Format<"uuid">;

    /**
     * 매칭 대상 고객의 ID. virtual_account_customers FK.
     *
     * 입금 매칭이 연결되는 고객 식별자입니다.
     */
    matched_customer_id: string & tags.Format<"uuid">;

    /**
     * 매칭 이벤트가 실제로 처리된 일시.
     *
     * PG/Webhook/관리자 수기 처리 시점 등을 기록합니다.
     */
    matched_at: string & tags.Format<"date-time">;

    /** 매칭 방식 구분자입니다. 'AUTOMATIC' 또는 'MANUAL' 방식 구분에 사용합니다. */
    matching_method: string;

    /**
     * 매칭 시 기재하는 사유, 코멘트 등.
     *
     * 이벤트 사유, 특이사항 참고 정보로 입력받습니다.
     */
    reason: string;
  };

  /**
   * 입금 매칭 정보 수정 시 사용하는 요청 본문 구조입니다.
   *
   * 수정 가능한 필드만 노출하며, 업무상 처리 이력 기록 필드를 포함합니다.
   */
  export type IUpdate = {
    /**
     * 수정할 매칭 건의 고객 ID입니다.
     *
     * 입금 매칭 결과를 변경할 때 사용됩니다.
     */
    matched_customer_id: string & tags.Format<"uuid">;

    /** 매칭 방식 변경 - 'AUTOMATIC' 또는 'MANUAL' */
    matching_method: string;

    /**
     * 매칭 수정 사유 및 관리자 코멘트.
     *
     * 입금 매칭 변경 이력, 이유 등 관리 목적의 기록 필드.
     */
    reason: string;
  };

  /**
   * 입금 매칭 로그 삭제 API의 결과 반환 데이터 타입입니다.
   *
   * 삭제 성공 여부와 안내 메시지를 포함합니다. 실패시 오류 안내 메시지가 할당됩니다.
   */
  export type IDeleteResult = {
    /**
     * 삭제 성공 여부입니다.
     *
     * 삭제 요청 처리의 결과 상태를 나타냅니다.
     */
    success: boolean;

    /**
     * 상세 메시지 및 추가 안내(삭제 실패 시 오류 사유 등).
     *
     * 사용자 및 관리자 UX를 위해 반환되는 안내문입니다.
     */
    message?: string;
  };
}

import { tags } from "typia";

/**
 * 관리자 행위(감사) 로그 단건 오브젝트
 *
 * 관리자 모든 주요 이벤트(엑셀다운로드, 권한변경 등) 이력 레코드의 완전형 정의.
 * virtual_account_admin_activity_logs DB row와 1:1 대응.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type virtual_account_admin_activity_logs = {
  /** 로그 고유 UUID(PK). */
  id: string & tags.Format<"uuid">;

  /** 로그 소유 관리자(수행자) UUID. */
  virtual_account_admin_id: string & tags.Format<"uuid">;

  /** 행위 유형 코드(예: EXPORT_EXCEL, DASHBOARD_UPDATE 등). */
  action_type: string;

  /** 로그가 기록된 대상 엔티티명. */
  entity_type: string;

  /** 타깃 엔티티 uuid(null 허용) */
  target_entity_id?: (string & tags.Format<"uuid">) | null;

  /** 행위 결과(성공/실패 상태값, 에러 등) */
  result: string;

  /** 부가 정보, 이벤트 context JSON. 첨부 정보용 */
  meta_json: string;

  /** 행위 발생 IP주소 */
  ip_addr: string;

  /** 행위 시각(ISO8601, UTC) */
  occurred_at: string & tags.Format<"date-time">;
};
export namespace virtual_account_admin_activity_logs {
  /**
   * 관리자 행위·감사 로그 목록 조회 및 필터·검색 PATCH(리스트) 요청 DTO
   *
   * Main 컬럼: actor_id(수행자), action_type(행위 유형), entity_type(타깃),
   * result(수행결과), occurred_from/to(기간), page, limit, sort 등 페이징/검색 옵션을 포괄.
   * 대시보드, 보안 대시보드에서 사용.
   */
  export type IRequest = {
    /** 행위 관리자 UUID로 필터(선택) */
    actor_id?: (string & tags.Format<"uuid">) | null;
  };

  /**
   * 관리자 행위·감사 로그 신규 생성 요청 DTO
   *
   * 관리자 이벤트 발생 시 신규 로그 로우 추가에 이용. 필수: 관리자 ID, 액션, 엔티티명, 결과, meta, ip, 시각.
   */
  export type ICreate = {
    /** 로그 생성(작성) 관리자 UUID */
    virtual_account_admin_id: string & tags.Format<"uuid">;

    /** 행위 유형 코드 */
    action_type: string;

    /** 주요 대상 엔티티 */
    entity_type: string;

    /** 타깃 엔티티 UUID (O) */
    target_entity_id?: (string & tags.Format<"uuid">) | null;

    /** 수행 결과 (필수) */
    result: string;

    /** 연관 추가 정보(JSON) */
    meta_json: string;

    /** 발생 IP주소(옵션) */
    ip_addr: string;

    /** 실행시각(UTC ISO8601) */
    occurred_at: string & tags.Format<"date-time">;
  };

  /**
   * 관리자 감사 로그 일부 필드 patch/update DTO
   *
   * 비고, 결과, 메타 등 일부 정보를 갱신할 때 사용.
   */
  export type IUpdate = {
    /** 수행 결과/상태(변경값 patch) */
    result?: string;

    /** 이벤트 context 메타(JSON) (patch) */
    meta_json?: string;

    /** 타깃 엔티티 UUID (optional patch) */
    target_entity_id?: (string & tags.Format<"uuid">) | null;
  };
}

import { tags } from "typia";

/**
 * 시스템 전체 설정 정보를 저장하는 객체입니다. 운영, 보안, 인프라 정책, 대시보드/알림 등 다양한 시스템 범주의 세부 옵션을 다룹니다.
 *
 * Prisma 'virtual_account_system_settings' 테이블을 그대로 반영하며, 각 설정 도메인/domain과 유니크
 * 키/setting_key로 구분됩니다. 이 구조는 운영팀의 정책 관리, 기능 플래그 적용, 추후 감사 및 변경 이력 파악 등 다양한 실무에
 * 사용됩니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type virtual_account_system_settings = {
  /**
   * 시스템 설정 항목의 고유 식별자입니다.
   *
   * Prisma 스키마의 'id' 필드. 시스템 내부에서 각 설정을 식별할 때 사용되며, 모든 시스템 트랜잭션 및 변경 이력에 대한
   * 참조로 활용됩니다.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 이 설정이 속하는 도메인 및 하위 영역(예시: infra, notification, security 등)을 나타냅니다.
   *
   * Prisma 스키마의 'domain' 필드. 관리화면에서 구분/필터링에 사용되며, 시스템 모듈별 설정을 그룹핑하는 역할입니다.
   */
  domain: string;

  /**
   * 개별 설정 항목을 구분하는 유니크 키 입니다. (예: enable_erp_sync, default_expiry_days 등)
   *
   * Prisma 스키마의 'setting_key' 필드. 각 도메인 내에서 중복될 수 없고, 프로그램의 동적 조회/검색에 활용됩니다.
   */
  setting_key: string;

  /**
   * 설정의 실제 값(문자열, 숫자, JSON포맷 등).
   *
   * Prisma 스키마의 'setting_value' 필드. 값 형식은 설정의 목적에 따라 다르며, 어플리케이션 로직에서 동적으로
   * 파싱되거나 적용됩니다.
   */
  setting_value: string;

  /**
   * 설정의 용도와 세부 설명. 관리/운영자가 관리화면이나 감사로그에서 상세 내역을 확인할 때 참고합니다.
   *
   * Prisma 스키마의 'description' 필드에 기반.
   */
  description: string;

  /**
   * 설정 레코드가 최초 생성된 일시(ISO8601 형식).
   *
   * Prisma 스키마의 'created_at' 필드에 상응합니다. 운영/감사 이력을 위한 메타데이터로 사용됩니다.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * 설정 데이터가 마지막으로 변경된 일시(ISO8601).
   *
   * Prisma 스키마의 'updated_at' 필드. 변경 추적, 감사 기능, 운영 로그에 활용됩니다.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace virtual_account_system_settings {
  /**
   * 시스템 환경/설정 목록 내 페이징, 필터, 검색 요청 DTO
   *
   * Virtual_account_system_settings(DB) 테이블의 domain, key, value, desc 등 조건별
   * 페이징 쿼리. 대시보드/설정 화면에 사용.
   */
  export type IRequest = {
    /** 설정 섹션/도메인 (필터 조건) */
    domain?: string | null;

    /** 설정 키값(필터 조건, 부분 검색 허용) */
    setting_key?: string | null;

    /** 설정값(검색용) */
    setting_value?: string | null;

    /** 설명/비고 (텍스트 검색 조건) */
    description?: string | null;

    /** 페이지 번호 */
    page?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "int32";
          }>)
      | null;

    /** 페이지 크기 */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "int32";
          }>)
      | null;

    /** 정렬 기준(예: created_at DESC 등) */
    sort?: string | null;
  };

  /**
   * 신규 시스템 설정값 등록 시 사용하는 생성 요청 바디 유형입니다.
   *
   * Prisma 'virtual_account_system_settings' 스키마 구조와 완전히 일치하며, 도메인-키-값-설명 필드만
   * 명시하면 됩니다. 주로 운영자/관리자에 의해 시스템 설정 추가 시 활용됩니다.
   */
  export type ICreate = {
    /**
     * 새 설정이 속할 도메인 구분자(예: notification, infra, security 등).
     *
     * Prisma 'domain' 컬럼과 동일. 그룹 단위로 설정을 쉽게 필터링할 때 사용됩니다.
     */
    domain: string;

    /**
     * 본 도메인 내 유니크 키로, 해당 설정을 식별/검색하는 용도. 예: enable_erp_sync,
     * excel_export_max_rows.
     *
     * Prisma 'setting_key'와 동일합니다.
     */
    setting_key: string;

    /**
     * 입력할 설정 값(문자, 숫자, JSON 등 문자열).
     *
     * Prisma 'setting_value'와 동일. 실제 값은 각 도메인/키별 유형이 상이할 수 있습니다.
     */
    setting_value: string;

    /**
     * 설정의 설명 또는 목적을 명확히 나타냅니다.
     *
     * Prisma 'description'과 동일. 관리자가 변경/조회할 때 참고합니다.
     */
    description: string;
  };

  /**
   * 시스템 설정 레코드의 값과 설명을 수정할 때 사용하는 타입입니다.
   *
   * 변경 가능한 필드는 setting_value(필수), description(선택)만 허용되며, 나머지는 불변입니다. 이 타입 구조는
   * 운영 환경에서 실제 설정 변경시, 관리자 대시보드에서 사용됩니다.
   */
  export type IUpdate = {
    /**
     * 수정 대상 설정의 새로운 값(문자열). 값 포맷은 키/도메인에 따라 다를 수 있습니다.
     *
     * Prisma 스키마의 'setting_value' 필드. 운영 변경이력 및 설정 갱신 용도.
     */
    setting_value: string;

    /**
     * 설명 텍스트의 변경, 또는 부연 설명 추가 시 사용.
     *
     * Prisma 'description'.
     */
    description?: string;
  };
}
